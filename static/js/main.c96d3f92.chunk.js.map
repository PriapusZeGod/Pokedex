{"version":3,"sources":["App.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Home","_useState","useState","_useState2","_slicedToArray","pokemonList","setPokemonList","_useState3","_useState4","previousUrl","setPreviousUrl","_useState5","_useState6","nextUrl","setNextUrl","useEffect","_ref","_asyncToGenerator","_callee","response","data","_context","fetch","json","results","previous","t0","console","apply","arguments","fetchData","handlePreviousClick","_ref2","_callee2","_context2","handleNextClick","_ref3","_callee3","_context3","React","createElement","className","map","pokemon","index","Card","pokemonName","pokemonUrl","url","onClick","_ref4","_useState7","_useState8","pokemonData","setPokemonData","_useState9","_useState10","pokemonType","setPokemonType","_ref5","_callee4","_context4","types","cardStyle","backgroundColor","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","Link","to","id","style","Fragment","src","sprites","front_default","alt","concat","About","pokemonId","useParams","_useState11","_useState12","setPokemon","_useState13","_useState14","abilities","setAbilities","ok","e","ability","effect","effect_entries","filter","language","short_effect","_toConsumableArray","log","stats","base_stat","href","App","root","ReactDOM","createRoot","document","getElementById","createHashRouter","path","element","render","RouterProvider"],"mappings":"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","file":"static/js/main.c96d3f92.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <nav>\n      <Link to=\"/\" element={<Home />}></Link>\n      <Link to=\"/:pokemonId\" element={<About />}>\n        About\n      </Link>\n    </nav>\n  );\n}\n\nexport function Home() {\n  const [pokemonList, setPokemonList] = useState([]);\n  const [previousUrl, setPreviousUrl] = useState(null);\n  const [nextUrl, setNextUrl] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          \"https://pokeapi.co/api/v2/pokemon?limit=18\"\n        );\n        const data = await response.json();\n        setPokemonList(data.results);\n        setPreviousUrl(data.previous);\n        setNextUrl(data.next);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const handlePreviousClick = async () => {\n    try {\n      const response = await fetch(previousUrl);\n      const data = await response.json();\n      setPokemonList(data.results);\n      setPreviousUrl(data.previous);\n      setNextUrl(data.next);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleNextClick = async () => {\n    try {\n      const response = await fetch(nextUrl);\n      const data = await response.json();\n      setPokemonList(data.results);\n      setPreviousUrl(data.previous);\n      setNextUrl(data.next);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <div className=\"app-container\">\n      <h1>Pokedex</h1>\n      <div className=\"cards-container\">\n        {pokemonList.map((pokemon, index) => (\n          <Card\n            key={index}\n            pokemonName={pokemon.name}\n            pokemonUrl={pokemon.url}\n          />\n        ))}\n      </div>\n      <div className=\"pagination-container\">\n        {previousUrl && <button onClick={handlePreviousClick}>Previous</button>}\n        {nextUrl && <button onClick={handleNextClick}>Next</button>}\n      </div>\n    </div>\n  );\n}\n\nfunction Card({ pokemonName, pokemonUrl }) {\n  const [pokemonData, setPokemonData] = useState(null);\n  const [pokemonType, setPokemonType] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(pokemonUrl);\n        const data = await response.json();\n        setPokemonData(data);\n        setPokemonType(data.types[0].type.name);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, [pokemonUrl]);\n\n  const typeColors = {\n    normal: \"#A8A77A\",\n    fire: \"#EE8130\",\n    water: \"#6390F0\",\n    electric: \"#F7D02C\",\n    grass: \"#7AC74C\",\n    ice: \"#96D9D6\",\n    fighting: \"#C22E28\",\n    poison: \"#A33EA1\",\n    ground: \"#E2BF65\",\n    flying: \"#A98FF3\",\n    psychic: \"#F95587\",\n    bug: \"#A6B91A\",\n    rock: \"#B6A136\",\n    ghost: \"#735797\",\n    dragon: \"#6F35FC\",\n    dark: \"#705746\",\n    steel: \"#B7B7CE\",\n    fairy: \"#D685AD\",\n  };\n\n  const cardStyle = {\n    backgroundColor: typeColors[pokemonType],\n  };\n\n  return (\n    pokemonData && (\n      <Link to={\"/\" + pokemonData.id} className=\"card\" style={cardStyle}>\n        {pokemonData ? (\n          <>\n            <div className=\"card-devider\">\n              <p>#{pokemonData.id}</p>\n              <p>{pokemonName}</p>\n            </div>\n            <div className=\"card-devider\">\n              <img\n                className=\"pokemon-image\"\n                src={pokemonData.sprites.front_default}\n                alt={`${pokemonName} sprite`}\n              />\n            </div>\n          </>\n        ) : (\n          <p>Loading...</p>\n        )}\n      </Link>\n    )\n  );\n}\n\nexport function About() {\n  const { pokemonId } = useParams();\n  const [pokemon, setPokemon] = useState({});\n  const [abilities, setAbilities] = useState([]);\n\n  useEffect(() => {\n    fetchPokemon(pokemonId);\n  }, [pokemonId]);\n\n  function fetchPokemon(id) {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id)\n      .then((response) => {\n        if (!response.ok) throw new Error(\"Response was not OK!\");\n        return response.json();\n      })\n      .then((data) => {\n        setPokemon(data);\n        fetchAbilities(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function fetchAbilities(pokemon) {\n    if (pokemon === null) return;\n    else {\n      setAbilities([]);\n      pokemon.abilities.forEach((e) => {\n        fetch(e.ability.url)\n          .then((response) => {\n            if (!response.ok) throw new Error(\"Response was not OK!\");\n            return response.json();\n          })\n          .then((data) => {\n            let effect = data.effect_entries.filter(\n              (e) => e.language.name === \"en\"\n            );\n            const ability = {\n              name: e.ability.name,\n              effect: effect[0].effect,\n              short_effect: effect[0].short_effect,\n            };\n            setAbilities((abilities) => [...abilities, ability]);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      });\n    }\n  }\n\n  return (\n    pokemon.stats && (\n      <div className=\"PokemonDetails\">\n        <header className=\"header\">\n          <img\n            className=\"pokemon-img\"\n            src={pokemon.sprites.front_default}\n            alt={\"Pokemon Logo\"}\n          />\n          <h1 className=\"pokemon-name\">{pokemon.name}</h1>\n        </header>\n\n        <div className=\"container\">\n          <h2>Stats</h2>\n\n          <table className=\"stats-table\">\n            <thead>\n              <tr>\n                <th>Stat</th>\n                <th>Base Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>HP</td>\n                <td>{pokemon.stats[0].base_stat}</td>\n              </tr>\n              <tr>\n                <td>Attack</td>\n                <td>{pokemon.stats[1].base_stat}</td>\n              </tr>\n              <tr>\n                <td>Defense</td>\n                <td>{pokemon.stats[2].base_stat}</td>\n              </tr>\n              <tr>\n                <td>Special Attack</td>\n                <td>{pokemon.stats[3].base_stat}</td>\n              </tr>\n              <tr>\n                <td>Special Defense</td>\n                <td>{pokemon.stats[4].base_stat}</td>\n              </tr>\n              <tr>\n                <td>Speed</td>\n                <td>{pokemon.stats[5].base_stat}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <h2>Abilities</h2>\n\n        {abilities.map((e) => {\n          return (\n            <div className=\"ability-card\">\n              <h3>{e.name}</h3>\n              <p>{e.effect}</p>\n            </div>\n          );\n        })}\n\n        <a className=\"btn\" href=\"/\">\n          Back\n        </a>\n      </div>\n    )\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { RouterProvider, createHashRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport { Home, About } from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nconst router = createHashRouter([\n  {\n    path: \"/\",\n    element: <Home />,\n  },\n  {\n    path: \"/:pokemonId\",\n    element: <About />,\n  },\n]);\nroot.render(\n  //<React.StrictMode>\n  <RouterProvider />\n  //</React.StrictMode>\n);\n"],"sourceRoot":""}